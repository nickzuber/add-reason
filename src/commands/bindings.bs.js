// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Chalk      = require("chalk");
var Patches    = require("../patches");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var NodeEmoji  = require("node-emoji");

function emoji(emoji$1) {
  return NodeEmoji.get(emoji$1) + "  ";
}

var bar = ( "├─ " );

var barEnd = ( "└─ " );

var barLong = ( "│" );

function sleep(ms) {
  var start = Date.now();
  var cur = Date.now();
  while((cur - start | 0) < ms) {
    cur = Date.now();
  };
  return /* () */0;
}

function paint($staropt$star, arg) {
  var blockThread = $staropt$star ? $staropt$star[0] : /* true */1;
  var parts = /* array */[
    "◜",
    "◝",
    "◟",
    "◞"
  ];
  for(var i = 0 ,i_finish = parts.length - 1 | 0; i <= i_finish; ++i){
    if (blockThread !== 0) {
      sleep(50);
    }
    Patches.flush();
    process.stdout.write(Caml_array.caml_array_get(parts, i) + (" " + arg));
  }
  return /* () */0;
}

function success() {
  Patches.flush();
  process.stdout.write(NodeEmoji.get("sparkles") + "  " + Chalk.green("done"));
  return /* () */0;
}

function failure() {
  Patches.flush();
  process.stdout.write(NodeEmoji.get("zap") + "  " + Chalk.red("failure"));
  return /* () */0;
}

exports.emoji   = emoji;
exports.bar     = bar;
exports.barEnd  = barEnd;
exports.barLong = barLong;
exports.sleep   = sleep;
exports.paint   = paint;
exports.success = success;
exports.failure = failure;
/* bar Not a pure module */
